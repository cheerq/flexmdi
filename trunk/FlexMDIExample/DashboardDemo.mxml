<?xml version="1.0" encoding="utf-8"?>
<mx:Application xmlns:mx="http://www.adobe.com/2006/mxml"
				xmlns:samples="sample_content.*" layout="horizontal">
	<mx:Style source="/mdi/assets/css/styles.css" />
	
	<!--
	<mx:VBox>
		<mx:Button label="Add Window" click="addWindow(300,400, 'New Window ' + tabView.selectedChild.numChildren)" />
		<mx:Button label="Cascade" click="this['newManager' + tabView.selectedIndex].cascade()" />
		<mx:Button label="Tile" click="this['newManager' + tabView.selectedIndex].tile(false, 0)" />
		<mx:Button label="Tile w/ Gap" click="this['newManager' + tabView.selectedIndex].tile(false, 20)" />
		<mx:Button label="Tile + Fill" click="this['newManager' + tabView.selectedIndex].tile(true, 0)" />
		<mx:Button label="Tile + Fill w/ Gap" click="this['newManager' + tabView.selectedIndex].tile(true, 20)" />
	</mx:VBox>
	-->
	
	<mx:ApplicationControlBar width="850" height="100%">
		<mx:Canvas width="100%" height="100%">
			<mx:HBox x="0" y="0" width="100%" height="25" horizontalAlign="right">
				<mx:ButtonBar dataProvider="['Add', 'Tile', 'Cascade']" itemClick="affectLayout(event)" />
			</mx:HBox>
			<mx:TabNavigator id="tabView" x="0" y="0" width="100%" height="100%" creationPolicy="queued" paddingTop="0">
				<mx:Canvas label="Sales" id="testPopupContainer0" width="100%" height="100%" 
						   horizontalScrollPolicy="off" verticalScrollPolicy="off"
						   creationComplete="createSampleContent(event, 0)" />
				<mx:Canvas label="Marketing" id="testPopupContainer1" width="100%" height="100%" 
						   horizontalScrollPolicy="off" verticalScrollPolicy="off"
						   creationComplete="createSampleContent(event, 1)" />
			</mx:TabNavigator>
		</mx:Canvas>
	</mx:ApplicationControlBar>
	
	
	

	
	<mx:Script>
		<![CDATA[
			import mx.events.ItemClickEvent;
			import mx.core.UIComponent;
			import sample_content.SampleContent;
			import mx.managers.PopUpManager;
			import mx.controls.PopUpButton;
			import mdi.managers.*;
			import mdi.containers.*;
			
			public var newManager0:ContainerWindowManager;
			public var newManager1:ContainerWindowManager;
			
			public function createSampleContent(event:Event, index:int):void
			{
				this['newManager' + index] = new ContainerWindowManager();
				this['newManager' + index].windowParent = event.target;

				for(var i:int = 0; i < 6; i++)
				{
					addWindow(200, 200, 'Sample ' + i, index);
				}
				
				callLater(tileNew, [index])
			}
			
			private function tileNew(index:int):void
			{
				this['newManager' + index].tile(true, 10);
			}
			
			private function affectLayout(event:ItemClickEvent):void
			{
				switch(event.item)
				{
					case 'Tile':
						this['newManager' + tabView.selectedIndex].tile(true, 15);
						break;
					case 'Add':
						addWindow(300,400, 'New Window ' + tabView.selectedChild.numChildren);
						break;
					case 'Cascade':
						this['newManager' + tabView.selectedIndex].cascade();
						break;
					default:
						break;
				}
			}
			
			public function addWindow(width:int, height:int, title:String, tabViewIndex:int = -1):void
			{
				var win:MDIPanel = new MDIPanel();
				win.height = width;
				win.width = height;
				win.title = title;
				
				
				var newSample:SampleContent = new SampleContent();
				newSample.percentHeight = 100;
				newSample.percentWidth = 100;
				win.addChild(newSample);
				
				if(tabViewIndex == -1) 
				{
					win.windowManager = this['newManager' + tabView.selectedIndex];
					this['newManager' + tabView.selectedIndex].add(win); 
				}
				else
				{
					win.windowManager = this['newManager' + tabViewIndex];
					this['newManager' + tabViewIndex].add(win); 
				}
				
				
			}
		]]>
	</mx:Script>
</mx:Application>
